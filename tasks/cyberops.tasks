["Domains", "HTML", "Domains.html", "MATCH (n:Domain) return n.name as Domain, n.domainsid as SID"]
["Domain Controllers","HTML","DomainControllers.html","MATCH (c:Computer)-[:MemberOf*1..]->(g:Group) WHERE g.objectid ENDS WITH '-516' RETURN c.name as Hostname, c.operatingsystem as OS, c.description as Description,toString(datetime({epochSeconds: ToInteger(coalesce(c.whencreated,0))})) as Created,c.haslaps as LAPS, c.enabled as Enabled, c.distinguishedname as DN"]
["Enterprise Admins", "HTML", "EnterpriseAdmins.html","MATCH p=(n:Group)<-[:MemberOf*1..]-(m) WHERE n.objectid =~ '(?i)S-1-5-.*-519' RETURN m.name as Name, m.description as Description, m.enabled as Enabled"]
["Schema Admins", "HTML", "SchemaAdmins.html", "MATCH p=(n:Group)<-[:MemberOf*1..]-(m) WHERE n.objectid =~ '(?i)S-1-5-.*-518' RETURN m.name as Name, m.description as Description, m.enabled as Enabled"]
["Domain Admins", "HTML", "DomainAdmins.html", "MATCH p=(n:Group)<-[:MemberOf*1..]-(m) WHERE n.objectid =~ '(?i)S-1-5-.*-512' RETURN m.name as Name, m.description as Description, m.enabled as Enabled"]
["Users Never Logged On","HTML","Users_NeverLoggedOn_Enabled.html","MATCH (n:User) WHERE n.lastlogontimestamp=-1.0 AND n.enabled=TRUE RETURN n.name as Username, m.description as Description ORDER BY n.name"]
["Users Never Logged On Recently","HTML","Users_NeverLoggedOnRecently_Enabled.html","WITH timestamp() / 1000 AS date_now MATCH (n:User) WHERE date_now - toInteger(n.lastlogontimestamp) > 15552000 AND n.lastlogontimestamp<>-1.0 RETURN n.name as Username, n.displayname as DisplayName, toInteger(n.lastlogontimestamp) as LastLogonTimeStamp"]
["Users With 6 Month Old Passwords","HTML","Users_6MosOldPasswords.html","WITH timestamp() / 1000 AS date_now MATCH (n:User) WHERE date_now - toInteger(n.pwdlastset) > 15552000 AND n.pwdlastset<>-1.0  AND n.pwdlastset<>0.0 RETURN n.name as Username, n.description as Description, n.enabled as Enabled, n.admincount as AdminCount, toString(datetime({epochSeconds: ToInteger(coalesce(n.pwdlastset,0))})) as PWDLastSet, toString(datetime({epochSeconds: ToInteger(coalesce(n.lastlogon,0))})) as LastLogon ORDER BY n.admincount, n.pwdlastset"]
["Users Password Never Expires", "HTML", "Users_NeverExpirePasswords.html", "MATCH (n:User) WHERE n.pwdneverexpires RETURN n.name as Username, n.description as Description, n.enabled as Enable, n.admincount as AdminUser ORDER by AdminUser DESC"]
["Users that Require NO Password", "HTML", "UsersThatRequireNOPassword.html", "MATCH (n:User) WHERE n.passwordnotreqd=true AND n.enabled=true RETURN n.name as Username, n.admincount as AdminUser ORDER by n.admincount DESC"]
["[+] Hunt - Users with Pass or PW in Description", "HTML", "HuntUsersWithPassInDescription.html", "MATCH (n:User) WHERE n.description  =~ '(?i).*(pass|pw).*' RETURN n.name as Name,n.displayname as DisplayName,n.enabled as Enabled, n.highvalue as HighValue,  n.description as Description, n.title as Title, n.pwdneverexpires as PWDNeverExpires, n.passwordnotreqd as PWDNotReqd, n.sensitive as Sensitive, n.admincount as AdminCount, n.serviceprincipalnames as SPN, toString(datetime({epochSeconds: ToInteger(coalesce(n.pwdlastset,0))})) as PWDLastSet, toString(datetime({epochSeconds: ToInteger(coalesce(n.lastlogon,0))})) as LastLogon "]
["[+] Kerberoastable Users","HTML","Kerberoastable_Users.html","MATCH (n:User) WHERE n.hasspn=true RETURN n.name as Username, n.displayname as DisplayName,n.description as Description, n.title as Title, n.pwdneverexpires as PasswordNeverExpires, n.passwordnotreqd as PasswordNotRequired, n.sensitive as Sensitive, n.admincount as AdminCount, n.serviceprincipalnames as SPNs ORDER by n.admincount DESC"]
["[+] Admin Groups","HTML","AdminGroups.html","Match (n:Group) WHERE n.name CONTAINS \'ADMIN\' return n.name as Name, n.highvalue as HighValue, n.description as Description, n.admincount as AdminCount"]
["[+] Operating Systems Unsupported","HTML","OperatingSystemUnsupported.html","MATCH (c:Computer) WHERE c.operatingsystem =~ '.*(2000|2003|2008|xp|vista|7|me).*' RETURN c.name as Computer, c.operatingsystem as UnsupportedOS, c.enabled as Enabled ORDER by c.operatingsystem, c.name"]
["[+] RDPable Servers","HTML","Workstations_RDP.html","match p=(g:Group)-[:CanRDP]->(c:Computer) where  g.objectid ENDS WITH \'-513\'  AND c.operatingsystem CONTAINS \'Server\' return c.name as Computer, c.operatingsystem as OperatingSystem ORDER by c.name"]
["[+] LAPS Deployment OS Count","HTML","LapsDeploymentCount-OS.html","MATCH (c:Computer) RETURN c.haslaps as LAPSEnabled, c.operatingsystem as OS, count(*) as Computers ORDER BY LAPSEnabled DESC, OS DESC"]
["[+] Local AdminUsers","HTML","LocalAdmin_Users.html","MATCH p=(m:User)-[r:AdminTo]->(n:Computer) RETURN m.name as User, n.name as Computer ORDER BY m.name"]
["[+] Most Admin Privileged Groups","HTML","Groups_MostAdminPrivileged.html","MATCH (g:Group) OPTIONAL MATCH (g)-[:AdminTo]->(c1:Computer) OPTIONAL MATCH (g)-[:MemberOf*1..]->(:Group)-[:AdminTo]->(c2:Computer) WITH g, COLLECT(c1) + COLLECT(c2) AS tempVar UNWIND tempVar AS computers RETURN g.name AS GroupName,COUNT(DISTINCT(computers)) AS AdminRightCount ORDER BY AdminRightCount DESC"]
["[+] Computers Vulnerable to Local Admin Enumeration","HTML","Computers_With_More_Than1_Local_Admin.html","MATCH p=()-[:AdminTo]->(n:Computer) RETURN n.name as Host, n.operatingsystem as OS"]
["Zip Tasks", "ZIP", "Reports.zip", "ZIP-TASKS"]
["Report Index","HTML","index.html","REPORT-INDEX"]
